package days24;

/**
 * @author Yelin
 * @date 2022. 3. 23. - 오후 4:34:06
 * @subject p596 LinkedList 컬렉션 클래스
 * @content 비순차적으로 삽입/삭제할 일이 많은 경우 사용하는 자료구조
 * 			
 *			1. 배열의 단점을 보완하기 위해서 LinkedList 컬렉션 클래스가 만들어졌다.
 *			- 배열의 장점 : 읽는 작업이 가장 빠르다.
 * 			- 배열의 단점 : 비순차적으로 수정(삽입, 삭제) 작업은 무지 느리다.
 *			
 *			2. 배열 : 메모리상에 동일한 자료형을 연속적으로 놓이게 한 것.
 *			   링크드 리스트 : 비연속적 [node]--[node]--[node]--[node]--[node]--[node]--[node] (앞에서 뒤의 놈 주소 가지고 잇음)
 *									 링크드 리스트의 요소(element) == node
 *
 *				A		B		C		D
 *				연락처	연락처	연락처	null
 *				A의 연락처만 알면 다른 사람의 연락처를 다 알 수 있음
 *
 *			3. 단점
 *				[node]--[node]--[node]-- !!끊어짐!! --[node]--[node]--[node]
 *				끊어진 거 뒤로 다 날라감
 *
 * 			4. 단점을 보완한 링크드 리스트(== 단방향 링크드 리스트)
 * 				환형 링크드 리스트 : 처음 노드와 마지막 노드가 연결되어진 것(원을 그리는게 한방향)
 * 				더블(양방향) 링크드 리스트 : 앞 뒤로 서로 주소 값을 가지고 있음
 * 				더블 써클러(이중 원형) 링크드 리스트 :  처음 노드와 마지막 노드가 서로 연결되어진 것(원을 그리는게 양방향)
 * 				
 */
public class Ex12 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	} // main

} // class
